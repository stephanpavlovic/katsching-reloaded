= form_with model: transaction, url: url, class: 'Form', data: { 'turbo-frame': '_top' } do |f|
  .MarginBottom
    = f.number_field :amount, value: transaction.amount&.abs&.to_f, class: 'Input asMain', placeholder: '0.00', step: 0.01, min: 0.01, data: { controller: 'auto-focus' }, required: true

  %label.InOut
    = check_box_tag :outgoing, true, transaction.outgoing?, class: 'InOut-checkbox'
    .InOut-content
      .InOut-content-check= t('.outgoing')
      .InOut-content-noncheck= t('.incoming')
  .Flex.MarginBottom
    .Flex-item
      .MarginBottomSmall= f.label :category, class: 'Label'
      = f.select :category, options_for_select(category_options, transaction.category), {}, class: 'Select'
    .Flex-item
      .MarginBottomSmall= f.label :date, class: 'Label'
      = f.date_field :date, class: 'Input'
  .MarginBottomSmall= f.label :name, class: 'Label'
  .MarginBottom= f.text_field :name, class: 'Input', autocomplete: 'off'
  .MarginBottom
    %label.CheckboxLabel
      = f.check_box :shared, value: true, class: 'Checkbox'
      = t('.shared')
  .Flex
    - url = transaction.persisted? ? transaction_path(transaction, user_id: transaction.user) : user_path(transaction.user.slug)
    = link_to t('common.cancel'), url, class: 'Link'
    = f.submit t('common.submit'), class: 'Button'
    - if transaction.persisted?
      = link_to t('common.delete'), user_transaction_path(transaction.user.slug, transaction), data: { turbo_confirm: t('common.confirm'), turbo_method: :delete }, class: 'Link'
